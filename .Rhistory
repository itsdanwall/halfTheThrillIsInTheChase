library(truncnorm)
set.seed(134)
rtruncnorm(12, a = 0, b = Inf, mean = .2, sd = .1)
round(rtruncnorm(12, a = 0, b = Inf, mean = .2, sd = .1), 2)
rnorm(8, 22, 0)
rnorm(8, 22, 1)
round(rnorm(8, 22, 1), 2)
round(rnorm(8, 22, 1), 2)
set.seed(213436)
round(rnorm(8, 22, 1), 2)
430.53-334
96.53/2
48.23/3
48.265/2
24.13+16.08
40.21*2
+16.08
80.42+16.08
130.7/3
9*12
179+178
+108
357+108
108/465
11/10
10/11
exp(-.008*1)
library(GGally)
ggpairs(iris, 1:4)
c(30, 40 ,42, 37, 39)
meand(c(30, 40 ,42, 37, 39))
mean(c(30, 40 ,42, 37, 39))
mean(c(60, 65, 70, 68, 66))
mean(c(20, 25, 27, 28, 24))
mean(c(48, 50, 57, 54, 58))
mean(c(30, 40, 31, 42, 38))
mean(c(58, 60, 61, 55, 68))
install.packages(c("rstan", "rstanarm", "shinystan"))
set.seed(1214)
runif(1,25)
?runif
runif(1, min = 1,max = 25)
source('~/.active-rstudio-document', echo=TRUE)
floor(runif(1, min = 2,max = 37))
# 1st random
set.seed(1214)
floor(runif(1, min = 1,max = 25))
# Bonus serial is 147762
# Their choice number is
floor(runif(1, min = 2,max = 37))
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("BH", "broom", "car", "curl", "data.table", "DEoptimR", "devtools", "digest", "directlabels", "dygraphs", "effects", "expm", "fields", "geepack", "GGally", "git2r", "Hmisc", "htmltools", "httr", "jsonlite", "knitr", "latticeExtra", "lme4", "lpSolve", "lsmeans", "maps", "matrixStats", "maxLik", "mclust", "memoise", "msm", "multcomp", "mvtnorm", "pbkrtest", "plotrix", "R.cache", "R.utils", "R6", "Rcpp", "RcppEigen", "repmis", "rgl", "rmarkdown", "roxygen2", "rstudioapi", "RUnit", "sandwich", "shiny", "shinyjs", "sjmisc", "sjPlot", "spam", "statmod", "TH.data", "tidyr", "xtable"))
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
tbl1sum
tbl1sum <- tbl1 %>%
group_by(variable) %>%
summarise(sd_sd = sd(sd))
tbl1sum
tbl1sum <- tbl1 %>%
group_by(variable) %>%
summarise(sd_sd = sd(sd),
mean_sd = mean(sd))
tbl1 <- merge(tbl1, tbl1sum)
View(tbl1)
View(tbl1)
names(tbl1)
?replicate
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1_reps)
?data.frame
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1_reps)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
#-------
# Half the fun is in the data faking
# Daniel Wall
# 10 Feb 2016
#-------
setwd("/Users/DanWall/Documents/halfTheThrillIsInTheDataFaking/")
tbl1 <- read.csv("table1.csv", stringsAsFactors = FALSE)
library(dplyr)
library(truncnorm)
# add in the number of participants
tbl1 <- tbl1 %>%
mutate(n_per = 11,
sd = se * sqrt(n_per)) %>%
arrange(variable)
# create sd_sd and mean_sd for each variable
tbl1sum <- tbl1 %>%
group_by(variable) %>%
summarise(sd_sd = sd(sd),
mean_sd = mean(sd))
tbl1 <- merge(tbl1, tbl1sum)
reps <- 1000
View(tbl1)
str(tbl1)
summary(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
?rtruncnorm
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1)
str(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1)
str(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
View(tbl1)
summary(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
summary(tbl1)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
names(tbl1
)
names(tbl1_reps)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
tbl1_reps %>%
rename(rep_sd = `.`)
?rename
tbl1_reps <- tbl1_reps %>%
rename_("rep_sd" = ".")
View(tbl1_reps)
tbl1_reps <- tbl1_reps %>%
# rename_("rep_sd" = ".") %>%
group_by(variable, manip) %>%
mutate(n_rep = 1:reps)
View(tbl1_reps)
tbl1_reps1 <- tbl1_reps %>%
group_by(variable, n_rep) %>%
summarise(sd_sd = sd(rep_sd))
View(tbl1_reps1)
library(ggplot2)
ggplot(tbl1_reps1, aes(x = sd_sd)) +
geom_histogram() +
facet_grid(. ~ variable)
ggplot(tbl1_reps1, aes(x = sd_sd)) +
geom_histogram() +
facet_grid(variable ~ .)
View(tbl1sum)
tbl1sum <- tbl1 %>%
group_by(variable) %>%
summarise(sd_sd_obs = sd(sd),
mean_sd = mean(sd))
tbl1_reps1 <- merge(tbl1sum, tbl1_reps1)
tbl1_reps1 <- tbl1_reps1 %>%
mutate(sd_sd_obs_gt_sd_sd_sim = ifelse(sd_sd_obs >= sd_sd))
tbl1_reps1 <- tbl1_reps1 %>%
mutate(sd_sd_obs_gt_sd_sd_sim = ifelse(sd_sd_obs >= sd_sd, TRUE, FALSE))
?geom_vline
ggplot(tbl1_reps1, aes(x = sd_sd)) +
geom_histogram() +
geom_vline(xintercept = sd_sd_obs)
facet_grid(variable ~ .)
ggplot(tbl1_reps1, aes(x = sd_sd)) +
geom_histogram() +
geom_vline(xintercept = sd_sd_obs) +
facet_grid(variable ~ .)
tbl1_reps1 <- tbl1_reps1 %>%
mutate(sd_sd_obs_gt_sd_sd_sim = ifelse(sd_sd_obs >= sd_sd, TRUE, FALSE))
View(tbl1_reps1)
ggplot(tbl1_reps1, aes(x = sd_sd)) +
geom_histogram() +
geom_vline(aes(xintercept = sd_sd_obs)) +
facet_grid(variable ~ .)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
names(tbl1_reps1)
tbl1_reps1_sum <- tbl1_reps1 %>%
group_by(variable) %>%
summarise(sum_sim_gt_obs = sum(sd_sd_obs_gt_sd_sd_sim),
n_reps = max(n_rep))
tbl1_reps1_sum
tbl1_reps1_sum <- tbl1_reps1 %>%
group_by(variable) %>%
summarise(sum_sim_gt_obs = sum(sd_sd_obs_gt_sd_sd_sim),
n_reps = max(n_rep)) %>%
mutate(p_val = sum_sim_gt_obs/n_reps)
tbl1_reps1_sum
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
tbl1_reps1_sum
.548*sqrt(45)
source('~/halfTheThrillIsInTheDataFaking/pretty_way.R', echo=TRUE)
tbl1_reps1_sum
library(plotrix)
sds <- c(25.09, 24.58, 25.65)
sd_sds <- sd(sds)
sd_sds
pooled_sd <- mean(sds)
pooled_sd
pooled_sd <- mean(sds) %>% round(2)
pooled_sd
std.error(sds)
sd_sds/(sqrt(2*35))
pooled_sd/(sqrt(2*35))
pooled_sd/(sqrt(2*15))
library(dplyr)
library(truncnorm)
#---Product Evaluation-----
prod_eval <- c(2.28, 1.41, 1.31, 1.48, 1.35)
sd_prod_eval <- sd(prod_eval)
# convert standard errors into standard deviations
se_prod_eval <- c(.23, .23, .25, .23, .27)
sd_prod_eval <- se_prod_eval * sqrt(11)
sd_sd_prod_eval <- sd(sd_prod_eval)
pooled_sd_prod_eval <- mean(sd_prod_eval)
# Willingness to pay
prod_eval_mean_sd <- data.frame(study_cond = c("app_sens", "avoid_sens", "ctrl1", "ctrl2", "app_inf"),
mean = prod_eval,
sd = sd_prod_eval )
prod_eval_sd <- prod_eval_mean_sd %>%
mutate(pooled_sd = mean(sd))
# wtp_appsens <- rnorm(11, mean = wtp[1], sd = pooled_sd)
# lapply(, rnorm, n =  11, mean = 1.49, sd = 1.06132)
# bootsds <- wtp_mean_sd %>%
#   group_by(study_cond) %>%
#   bootstrap(100) %>%
#   do(as.data.frame(sd(rnorm(11, mean = .$mean, sd = .$pooled_sd))))
#
# number of replications
J = 100000
rnorms = list(app_sens = rep(0, J),
avoid_sens = rep(0, J),
ctrl1 = rep(0, J),
ctrl2 = rep(0, J),
app_inf = rep(0, J))
for(i in 1:nrow(prod_eval_sd)) {
for(j in 1:J) {
rnorms[[i]][j] = sd(rtruncnorm(11, a = 1, b = 7, mean = prod_eval_mean_sd[i, "mean"], sd = prod_eval_mean_sd[i, "sd"]))
}
}
pooled_sd_prod_eval
pooled_sd_prod_eval/sqrt(2*55)
sd_sd_prod_eval
se_pooled_sd <- pooled_sd_prod_eval/sqrt(2*55)
sd_sd_prod_eval/se_pooled_sd
sim_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65))
sim_tbl1
library(dplyr)
sim_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65)) %>%
mutate(pooled_sd = mean(sd))
sim_tbl1
sim_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65),
n = c(15, 15, 15)) %>%
mutate(pooled_sd = mean(sd))
sim_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65),
n = c(15, 15, 15)) %>%
mutate(pooled_sd = mean(sd),
sd_sds = sd(sd))
sim_tbl1
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps <- jpi_tbl1 %>%
group_by(cond) %>%
do(sd_samp(df = ., reps = 10000))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
sd_samp <- function(df, reps) {
nper <- as.numeric(df[1, "n_per"])
minscore <- as.numeric(df[1, "min_score"])
maxscore <- as.numeric(df[1, "max_score"])
mean <- as.numeric(df[1, "mean"])
pooledsd <- as.numeric(df[1, "pooled_sd"])
reps <- replicate(reps,
sd(rtruncnorm(nper, a = minscore, b = maxscore, mean = mean,
sd = pooledsd)))
reps <- as.data.frame(reps)
names(reps) <- "rep_sd"
}
sd_samp(jpi_tbl1[1, ], 100)
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps
jpi_tbl1_reps %>% View
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps
jpi_tbl1_reps_sum <- jpi_tbl1_reps %>%
ungroup() %>%
group_by(n_rep) %>%
summarise(sim_sd_sds)
jpi_tbl1_reps_sum <- jpi_tbl1_reps %>%
ungroup() %>%
group_by(n_rep) %>%
summarise(sim_sd_sds = sd(rep_sd))
jpi_tbl1_reps_sum
jpi_tbl1
jpi_tbl1_reps_sum
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps_sum
jpi_tbl1_reps_sum$studysd_gt_simsd %>% summary
132/10000
source('~/.active-rstudio-document', echo=TRUE)
jpi_tbl1_reps_sum$studysd_gt_simsd %>% summary
jpi_tbl1
# redo of Simonsohn
library(dplyr)
library(truncnorm)
# function to calculate sd of sample
sd_samp <- function(df, reps) {
nper <- as.numeric(df[1, "n_per"])
minscore <- as.numeric(df[1, "min_score"])
maxscore <- as.numeric(df[1, "max_score"])
mean <- as.numeric(df[1, "mean"])
pooledsd <- as.numeric(df[1, "pooled_sd"])
reps <- replicate(reps,
sd(rtruncnorm(nper, a = minscore, b = maxscore, mean = mean,
sd = pooledsd)))
reps <- as.data.frame(reps)
names(reps) <- "rep_sd"
reps
}
jpi_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65),
n_per = c(15, 15, 15),
min_score = c(0, 0, 0),
max_score = c(100, 100, 100)) %>%
mutate(pooled_sd = mean(sd),
sd_sds = sd(sd),
mean_n = mean(n_per),
se_sds = pooled_sd/(sqrt(mean_n)))
jpi_tbl1
# redo of Simonsohn
library(dplyr)
library(truncnorm)
# function to calculate sd of sample
sd_samp <- function(df, reps) {
nper <- as.numeric(df[1, "n_per"])
minscore <- as.numeric(df[1, "min_score"])
maxscore <- as.numeric(df[1, "max_score"])
mean <- as.numeric(df[1, "mean"])
pooledsd <- as.numeric(df[1, "pooled_sd"])
reps <- replicate(reps,
sd(rtruncnorm(nper, a = minscore, b = maxscore, mean = mean,
sd = pooledsd)))
reps <- as.data.frame(reps)
names(reps) <- "rep_sd"
reps
}
jpi_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65),
n_per = c(15, 15, 15),
min_score = c(0, 0, 0),
max_score = c(100, 100, 100)) %>%
mutate(pooled_sd = mean(sd),
sd_sds = sd(sd),
mean_n = mean(n_per),
se_sds = pooled_sd/(sqrt(2*mean_n)))
jpi_tbl1
# redo of Simonsohn
library(dplyr)
library(truncnorm)
# function to calculate sd of sample
sd_samp <- function(df, reps) {
nper <- as.numeric(df[1, "n_per"])
minscore <- as.numeric(df[1, "min_score"])
maxscore <- as.numeric(df[1, "max_score"])
mean <- as.numeric(df[1, "mean"])
pooledsd <- as.numeric(df[1, "pooled_sd"])
reps <- replicate(reps,
sd(rtruncnorm(nper, a = minscore, b = maxscore, mean = mean,
sd = pooledsd)))
reps <- as.data.frame(reps)
names(reps) <- "rep_sd"
reps
}
jpi_tbl1 <- data.frame(cond = c("high", "low", "ctrl"),
mean = c(39.74, 85.74, 65.73),
sd = c(25.09, 24.58, 25.65),
n_per = c(15, 15, 15),
min_score = c(0, 0, 0),
max_score = c(100, 100, 100)) %>%
mutate(pooled_sd = mean(sd),
sd_sds = sd(sd),
mean_n = mean(n_per),
se_sds = pooled_sd/(sqrt(2*mean_n)),
psi = sd_sds / se_sds)
jpi_tbl1
source('C:/git_repositories/halfTheThrillIsInTheChase/jpi_redo.R', echo=TRUE)
jpi_tbl1_reps_sum
jpi_tbl1
jpi_tbl1_reps_sum <- jpi_tbl1_reps %>%
ungroup() %>%
group_by(n_rep) %>%
summarise(sim_sd_sds = sd(rep_sd),
pooled_sd = mean(rep_sd),
se_sds = pooled_sd/(sqrt(2*15)),
psi = sim_sd_sds / se_sds) %>%
mutate(study_sd_sds = 0.5351947,
study_psi = 0.1167571,
studysd_gt_simsd = ifelse(study_sd_sds > sim_sd_sds, TRUE, FALSE))
jpi_tbl1_reps_sum
source('C:/git_repositories/halfTheThrillIsInTheChase/jpi_redo.R', echo=TRUE)
jpi_tbl1_reps_sum
jpi_tbl1_reps_sum$studypsi_gt_simpsi %>% summary
jpi_tbl1_reps_sum$studysd_gt_simsd %>% summary
